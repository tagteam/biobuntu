#+TITLE: connect with computing servers via vpn 
#+Author: Thomas Alexander Gerds
#+setupfile:~/emacs-genome/snps/org-templates/setup-biobuntu.org
#+superman-export-target: html

* Preparation

In all of the following =*Terminal*= codes you should replace =bio737=
with your own *KU-id*. Shout out loud (we need to be able to hear you
in bygning 15) if you run into unclearness, typos or really unsolvable
problems ...


* Open vpn from a wireless connection 

Here we describe a way to connect a linux bring-your-own-device
computer via vpn to the KU system.

1. Open https://vpn.ku.dk and log in with 2-factor authentication
   (E.g., use the microsoft authenticator app on your phone or
   tablet. see KU net for details). They say that this will start the
   installation of the Cisco client, however, see the next steps.

2. Download the file anyconnect-linux64-....webdeploy-k9.sh 

3. change the executable permissions of the file and
   execute the file as sudo, e.g.,

#+BEGIN_SRC sh
cd Downloads
chmod 751 anyconnect-linux64-....webdeploy-k9.sh
sudo ./anyconnect-linux64-....webdeploy-k9.sh
#+END_SRC   

4. now connect to the vpn either using the command line

#+BEGIN_SRC sh
  /opt/cisco/anyconnect/bin/vpn -s connect "vpn.ku.dk"
# or after the first time you can also use the alias
  /opt/cisco/anyconnect/bin/vpn -s connect "KU VPN"
#+END_SRC   

or the graphical interface

#+BEGIN_SRC sh
/opt/cisco/anyconnect/bin/vpnui
#+END_SRC   

In both options you provide your KU-user-name and password. Note that
this requires 2-factor authorization, i.e., also check you
authenticator app on your or phone/tablet.

* Biostat computing servers 
The computing servers with ssh access are 

- =doob= (virtual)
- =rasch= (virtual)
- =rao= (linux, cue system)
- =cox= (linux, cue system)  

To connect with one of these machines you need to either be connected
via cable at CSS or open a vpn connection (see instructions below).
Then, you can login to =doob= via:

#+BEGIN_SRC sh
ssh -X bio737@doob
#+END_SRC

You may have to specify the unicph.domain, i.e.

#+BEGIN_SRC sh
ssh bio737@doob.unicph.domain
#+END_SRC

** Loading R

Note that R is not already loaded when you log in. This can be done with (it's important that gcc is loaded first):
#+BEGIN_SRC sh
module load gcc/11.2.0
module load R/4.1.1
#+END_SRC

** Hard to remember?

Add aliases to the file =~/.bashrc=

#+BEGIN_SRC sh
alias cox='ssh -X bio737@cox'
alias rao='ssh -X bio737@rao' 
alias doob='ssh -X bio737@doob'
alias rasch='ssh -X bio737@rasch'
#+END_SRC

** Working on remote servers

Check out Andreas's repository [[https://github.com/aejensen/computing-biostat-ucph][computing@biostat-ucph]] for more on the 
servers. It is important to read the document =compBiostat.pdf= before
you start working there.

* Eduroam

You are on your own, but this should work:

Wi-fi Security

- Security: WPA & WPA2 Enterprise
- Authentication: Protected EAP (PEAP)
- No CA certificate is required
- PEAP version: Version 0
- Inner authentication: MSCHAPv2
- Username: bio737
- Password: xxxx






